[{"id":"55067884.8ce418","type":"tab","label":"Query Daikin"},{"id":"804c22f5.53ff8","type":"inject","z":"55067884.8ce418","name":" Query Daikin every 15secs","topic":"","payload":"","payloadType":"date","repeat":"15","crontab":"","once":false,"x":200,"y":580,"wires":[["69e9bba6.1a80e4"]]},{"id":"6884181c.dc0744","type":"function","z":"55067884.8ce418","name":"Zones Status","func":"if (msg.payload >= 0) {\n   //flow.set('active_zones', msg.payload);\n   if (msg.payload & 128) {\n       var z1 = '1';\n   } else { \n       var z1 = '0';\n   }\n   if (msg.payload & 64) {\n       var z2 = '1';\n   } else { \n       var z2 = '0';\n   }\n    if (msg.payload & 32) {\n       var z3 = '1';\n    } else { \n       var z3 = '0';\n   }\n   \n   if (msg.payload & 16) {\n        var z4 = '1';\n   } else { \n        var z4 = '0';\n   }\n   \n   if (msg.payload & 8) {\n       var z5 = '1';\n   } else { \n       var z5 = '0';\n   }\n   \n   if (msg.payload & 4) {\n       var z6 = '1';\n   } else { \n       var z6 = '0';\n   }\n   \n   if (msg.payload & 2) {\n       var z7 = '1';\n   } else { \n       var z7 = '0';\n   }\n   \n   if (msg.payload & 1) {\n       var z8 = '1';\n   } else { \n       var z8 = '0';\n   }\n\n//flow.set('cur_z1', parseInt(z1));\n//flow.set('cur_z2', parseInt(z2));\n//flow.set('cur_z3', parseInt(z3));\n//flow.set('cur_z4', parseInt(z4));\n//flow.set('cur_z5', parseInt(z5));\n\n\nvar z1 = {payload: z1};\nvar z2 = {payload: z2};\nvar z3 = {payload: z3};\nvar z4 = {payload: z4};\nvar z5 = {payload: z5};\n\nreturn [z1,z2,z3,z4,z5]\n\n\n}","outputs":"5","noerr":0,"x":1090,"y":880,"wires":[["c3980a64.81115"],["7d33b1a6.82a8a"],["d1b55f59.0c447"],["92a10880.278908"],["c4986bec.a10868"]]},{"id":"c3980a64.81115","type":"mqtt out","z":"55067884.8ce418","name":"Zone1 Status to MQTT","topic":"daikin/zones/status/z1","qos":"0","retain":"false","broker":"3622e190.c9dd1e","x":1477.7857666015625,"y":794.5833406448364,"wires":[]},{"id":"88f4e2a3.03799","type":"mqtt in","z":"55067884.8ce418","name":"Subscribe to daikin mqtt","topic":"daikin/#","qos":"2","broker":"3622e190.c9dd1e","x":179.3333282470703,"y":200.66668128967285,"wires":[["b1042d74.ca199"]]},{"id":"b1042d74.ca199","type":"switch","z":"55067884.8ce418","name":"Seperate System And Zones","property":"topic","propertyType":"msg","rules":[{"t":"cont","v":"daikin/system/cmd","vt":"str"},{"t":"cont","v":"daikin/zones/cmd","vt":"str"}],"checkall":"true","outputs":2,"x":427.33331298828125,"y":199.952392578125,"wires":[["79d17a9f.c715b4","39e6b6e6.49fe6a"],["3b296124.013c5e","a72f66e6.678e08"]]},{"id":"79d17a9f.c715b4","type":"debug","z":"55067884.8ce418","name":"","active":true,"console":"false","complete":"false","x":639.3333282470703,"y":116.0523624420166,"wires":[]},{"id":"3b296124.013c5e","type":"debug","z":"55067884.8ce418","name":"","active":true,"console":"false","complete":"false","x":664.3333282470703,"y":319.0523624420166,"wires":[]},{"id":"39e6b6e6.49fe6a","type":"function","z":"55067884.8ce418","name":"NewValsFromMQTT","func":"//NewValsFromMQ\n\n//This function reads MQTT  and builds url for any update.\nvar secret = flow.get('secret'); // Get the SkyFi password from the Config node\nvar ipaddress = flow.get('ipaddress') //Get the SkyFi IPadddress\n\n\nif (msg.topic == \"daikin/system/cmd/p\") { \n       //flow.set('new_p', msg.payload);\n        msg.payload =\"http://\"+ ipaddress +\":2000/set.cgi?pass=\" + secret +\"&p=\"+ parseInt(msg.payload)\n }\nif (msg.topic == \"daikin/system/cmd/t\") { \n        //flow.set('new_t', parseInt(msg.payload));\n        msg.payload =\"http://\"+ ipaddress +\":2000/set.cgi?pass=\" + secret +\"&t=\"+ parseInt(msg.payload)\n }\nif (msg.topic == \"daikin/system/cmd/f\") { \n        //flow.set('new_f', parseInt(msg.payload));\n        msg.payload =\"http://\"+ ipaddress +\":2000/set.cgi?pass=\" + secret +\"&f=\"+ parseInt(msg.payload)\n }\nif (msg.topic == \"daikin/system/cmd/m\") { \n        //flow.set('new_m', parseInt(msg.payload));\n        msg.payload =\"http://\"+ ipaddress +\":2000/set.cgi?pass=\" + secret +\"&m=\"+ parseInt(msg.payload)\n }\n\nreturn msg;\n","outputs":1,"noerr":0,"x":740.3333129882812,"y":180.952392578125,"wires":[["14da87f3.d7bd08"]]},{"id":"14da87f3.d7bd08","type":"http request","z":"55067884.8ce418","name":"GET to SkyFI","method":"GET","ret":"txt","url":"{{{payload}}}","tls":"","x":780,"y":580,"wires":[["9bcf7963.1b8af8","f1a838a1.6c2c78"]]},{"id":"9bcf7963.1b8af8","type":"debug","z":"55067884.8ce418","name":"Daikin Response","active":true,"console":"false","complete":"payload","x":1050,"y":460,"wires":[]},{"id":"94632d5f.e9964","type":"catch","z":"55067884.8ce418","name":"DaikinErrors","scope":["9bcf7963.1b8af8","14da87f3.d7bd08"],"x":125.1904182434082,"y":707.0475492477417,"wires":[["32fda393.0909fc"]]},{"id":"32fda393.0909fc","type":"debug","z":"55067884.8ce418","name":"","active":false,"console":"false","complete":"true","x":331.8570671081543,"y":707.7142305374146,"wires":[]},{"id":"a72f66e6.678e08","type":"function","z":"55067884.8ce418","name":"NewZoneValsFromMQTT","func":"//NewValsFromMQ\n\n//This function reads MQTT and stores the updates into node variables.\nvar secret = flow.get('secret'); // Get the SkyFi password from the Config node\nvar ipaddress = flow.get('ipaddress') //Get the SkyFi IPadddress\n\n\n\nif (msg.topic == \"daikin/zones/cmd/z1\") { \n        //flow.set('new_z1', msg.payload);\n        msg.payload = \"http://\"+ ipaddress +\":2000/setzone.cgi?pass=\" + secret +\"&z=1&s=\"+msg.payload;\n }\nif (msg.topic == \"daikin/zones/cmd/z2\") { \n        //flow.set('new_z2', msg.payload);\n        msg.payload = \"http://\"+ ipaddress +\":2000/setzone.cgi?pass=\" + secret +\"&z=2&s=\"+msg.payload;\n }\nif (msg.topic == \"daikin/zones/cmd/z3\") { \n        //flow.set('new_z3', msg.payload);\n        msg.payload = \"http://\"+ ipaddress +\":2000/setzone.cgi?pass=\" + secret +\"&z=3&s=\"+msg.payload;\n }\nif (msg.topic == \"daikin/zones/cmd/z4\") { \n        //flow.set('new_z4', msg.payload);\n        msg.payload = \"http://\"+ ipaddress +\":2000/setzone.cgi?pass=\" + secret +\"&z=4&s=\"+msg.payload;\n }\nif (msg.topic == \"daikin/zones/cmd/z5\") { \n        //flow.set('new_z5', msg.payload);\n        msg.payload = \"http://\"+ ipaddress +\":2000/setzone.cgi?pass=\" + secret +\"&z=5&s=\"+msg.payload;\n}\n \n \n//var new_z1 = flow.get('new_z1')\n//var new_z2 = flow.get('new_z2')\n//var new_z3 = flow.get('new_z3')\n//var new_z4 = flow.get('new_z4')\n//var new_z5 = flow.get('new_z5')\n\nreturn msg;\n","outputs":1,"noerr":0,"x":747.3333129882812,"y":233.66668701171875,"wires":[["14da87f3.d7bd08"]]},{"id":"f1a838a1.6c2c78","type":"function","z":"55067884.8ce418","name":"Publish SkyFI Status","func":"//  0           1       2           3       4           5       6          7        8       9        10    11          12              13      14       15   16     17         18            \n//opmode=0&units=.&settemp=22.0&fanspeed=1&fanflags=1&acmode=9&tonact=0&toffact=0&prog=0&time=15:08&day=6&roomtemp=30&outsidetemp=28&louvre=0&zone=168&flt=0&test=0&errcode=&sensors=1\n\n\nif (msg.payload.includes(\"Error\")){ // check for any Error message and ignore.\n   return [ null ];\n} else {\n    //Get current values from controller.\n    var opmode = parseInt(msg.payload.split('opmode=')[1].split(\"&\")[0]);\n    var settemp = parseInt(msg.payload.split('settemp=')[1].split(\"&\")[0]);\n    var fanspeed = parseInt(msg.payload.split('fanspeed=')[1].split(\"&\")[0]);\n    var acmode = parseInt(msg.payload.split('acmode=')[1].split(\"&\")[0]);\n    var roomtemp = parseInt(msg.payload.split('roomtemp=')[1].split(\"&\")[0]);\n    var outtemp = parseInt(msg.payload.split('outsidetemp=')[1].split(\"&\")[0]);\n    var zoneval = parseInt(msg.payload.split('zone=')[1].split(\"&\")[0]);\n \n\n//    var data1 = [opmode,settemp,fanspeed,acmode,roomtemp,outtemp];\n    var zoneval = {payload: zoneval};\n\n    // use the data from the controller to set/initialise the stores\n//    flow.set('cur_p', opmode);\n//    flow.set('cur_t', settemp);\n//    flow.set('cur_f', fanspeed);\n//    flow.set('cur_m', acmode);\n//    flow.set('cur_rmt', roomtemp);\n//    flow.set('cur_out', outtemp);\n  \n    var opmode = {payload: opmode};\n    var settemp = {payload: settemp};\n    var fanspeed = {payload: fanspeed};\n    var acmode = {payload: acmode};\n    var roomtemp = {payload: roomtemp};\n    var outtemp = {payload: outtemp};\n  \n    \nreturn [opmode,settemp,fanspeed,acmode,roomtemp,outtemp,zoneval];\n\n}\n\n","outputs":"7","noerr":0,"x":1060,"y":620,"wires":[["ec94cd03.807b8"],["cb27065.1259bf8"],["3c6f4f3c.067d7"],["3f84f9d3.0f4436"],["9cc796c3.62b7a8"],["cb9325f.f5b82d8"],["6884181c.dc0744"]]},{"id":"ec94cd03.807b8","type":"mqtt out","z":"55067884.8ce418","name":"Power Status To MQTT","topic":"daikin/system/status/power","qos":"0","retain":"false","broker":"3622e190.c9dd1e","x":1489.5000686645508,"y":534.3332481384277,"wires":[]},{"id":"cb27065.1259bf8","type":"mqtt out","z":"55067884.8ce418","name":"SetTemp Status To MQTT","topic":"daikin/system/status/settemp","qos":"0","retain":"false","broker":"3622e190.c9dd1e","x":1490,"y":580,"wires":[]},{"id":"3c6f4f3c.067d7","type":"mqtt out","z":"55067884.8ce418","name":"Fanspeed Status To MQTT","topic":"daikin/system/status/fanspeed","qos":"0","retain":"false","broker":"3622e190.c9dd1e","x":1500.5000686645508,"y":617.3332481384277,"wires":[]},{"id":"3f84f9d3.0f4436","type":"mqtt out","z":"55067884.8ce418","name":"ACMode Status To MQTT","topic":"daikin/system/status/acmode","qos":"0","retain":"false","broker":"3622e190.c9dd1e","x":1489.5000686645508,"y":654.3332481384277,"wires":[]},{"id":"9cc796c3.62b7a8","type":"mqtt out","z":"55067884.8ce418","name":"RoomTemp Status To MQTT","topic":"daikin/system/status/roomtemp","qos":"0","retain":"false","broker":"3622e190.c9dd1e","x":1500,"y":700,"wires":[]},{"id":"cb9325f.f5b82d8","type":"mqtt out","z":"55067884.8ce418","name":"Outside Temp Status To MQTT","topic":"daikin/system/status/outtemp","qos":"0","retain":"false","broker":"3622e190.c9dd1e","x":1510,"y":740,"wires":[]},{"id":"7d33b1a6.82a8a","type":"mqtt out","z":"55067884.8ce418","name":"Zone2 Status to MQTT","topic":"daikin/zones/status/z2","qos":"0","retain":"false","broker":"3622e190.c9dd1e","x":1477.5000610351562,"y":840.2976350784302,"wires":[]},{"id":"d1b55f59.0c447","type":"mqtt out","z":"55067884.8ce418","name":"Zone3 Status to MQTT","topic":"daikin/zones/status/z3","qos":"0","retain":"false","broker":"3622e190.c9dd1e","x":1482.5000610351562,"y":880.2976350784302,"wires":[]},{"id":"92a10880.278908","type":"mqtt out","z":"55067884.8ce418","name":"Zone4 Status to MQTT","topic":"daikin/zones/status/z4","qos":"0","retain":"false","broker":"3622e190.c9dd1e","x":1481.5000610351562,"y":917.2976350784302,"wires":[]},{"id":"c4986bec.a10868","type":"mqtt out","z":"55067884.8ce418","name":"Zone5 Status to MQTT","topic":"daikin/zones/status/z5","qos":"0","retain":"false","broker":"3622e190.c9dd1e","x":1474.5000610351562,"y":957.2976350784302,"wires":[]},{"id":"13fe0d3d.b2d973","type":"config","z":"55067884.8ce418","name":"Daikin SkyFi Settings","properties":[{"p":"ipaddress","pt":"flow","to":"192.168.2.105","tot":"str"},{"p":"secret","pt":"flow","to":"123456","tot":"str"}],"active":true,"x":200,"y":100,"wires":[]},{"id":"69e9bba6.1a80e4","type":"function","z":"55067884.8ce418","name":"Query Daikin SkyFi URL","func":"\n//This function is called periodically to get latest values from Daikin unit\n\nvar secret = flow.get('secret'); // Get the SkyFi password from the Config node\nvar ipaddress = flow.get('ipaddress') //Get the SkyFi IPadddress\n\nmsg.payload =\"http://\"+ ipaddress +\":2000/ac.cgi?pass=\" + secret;\nreturn msg;\n\n    \n\n\n","outputs":1,"noerr":0,"x":470,"y":580,"wires":[["14da87f3.d7bd08"]]},{"id":"3622e190.c9dd1e","type":"mqtt-broker","z":"","broker":"your.broker.here","port":"1883","clientid":"","usetls":false,"verifyservercert":true,"compatmode":true,"keepalive":"15","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","willTopic":"","willQos":"0","willPayload":""}]
